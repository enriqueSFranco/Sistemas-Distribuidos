/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ljdc.practica3_refactorizacion.servidor.gui;

import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.JLabel;
import ljdc.practica3_refactorizacion.general.modelo.Libro;
import ljdc.practica3_refactorizacion.servidor.interfaces.GUIServidorInterfaz;
import ljdc.practica3_refactorizacion.servidor.interfaces.ServidorInterfaz;

/**
 *
 * @author Dave
 */
public class GUIServidor extends javax.swing.JFrame implements GUIServidorInterfaz {

    private ServidorInterfaz control;
    
    /**
     * Creates new form GUIServidor
     * @param control 
     */
    public GUIServidor(ServidorInterfaz control) {
        initComponents();
        this.control = control;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jScrollPane1 = new javax.swing.JScrollPane();
        ta_librosRestantes = new javax.swing.JTextArea();
        btn_reiniciarsesion = new javax.swing.JButton();
        lbl_reloj = new javax.swing.JLabel();
        btn_modificarreloj = new javax.swing.JButton();
        lbl_sesion = new javax.swing.JLabel();
        lbl_imagen = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Servidor");

        ta_librosRestantes.setEditable(false);
        ta_librosRestantes.setColumns(20);
        ta_librosRestantes.setRows(5);
        jScrollPane1.setViewportView(ta_librosRestantes);

        btn_reiniciarsesion.setText("Reiniciar Sesion");
        btn_reiniciarsesion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_reiniciarsesionActionPerformed(evt);
            }
        });

        lbl_reloj.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lbl_reloj.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbl_reloj.setText("00:00:00");

        btn_modificarreloj.setText("Modificar reloj");
        btn_modificarreloj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_modificarrelojActionPerformed(evt);
            }
        });

        lbl_sesion.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbl_sesion.setText("Sesion: -");

        lbl_imagen.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator1)
                    .addComponent(lbl_reloj, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btn_modificarreloj, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lbl_sesion, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(lbl_imagen, javax.swing.GroupLayout.DEFAULT_SIZE, 236, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(btn_reiniciarsesion, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lbl_reloj)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btn_modificarreloj)
                .addGap(18, 18, 18)
                .addComponent(lbl_sesion)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lbl_imagen, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btn_reiniciarsesion)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_modificarrelojActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_modificarrelojActionPerformed
        control.modificarReloj();
    }//GEN-LAST:event_btn_modificarrelojActionPerformed

    private void btn_reiniciarsesionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_reiniciarsesionActionPerformed
        control.reiniciarSesion();
    }//GEN-LAST:event_btn_reiniciarsesionActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_modificarreloj;
    private javax.swing.JButton btn_reiniciarsesion;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel lbl_imagen;
    private javax.swing.JLabel lbl_reloj;
    private javax.swing.JLabel lbl_sesion;
    private javax.swing.JTextArea ta_librosRestantes;
    // End of variables declaration//GEN-END:variables

    @Override
    public void actualizarSesion(int sesion) {
        this.lbl_sesion.setText("Sesion: " + sesion);
    }

    @Override
    public void actualizarReloj(String hora) {
        this.lbl_reloj.setText(hora);
    }

    @Override
    public void actualizarLista(List<Libro> lista) {
        String listaStr = "Libros Dispoinbles:\n";
        for(Libro l: lista){
            listaStr += " - " + l.getNombre() + "\n";
        }
        this.ta_librosRestantes.setText(listaStr);
    }

    @Override
    public void actualizarImagen(String ruta) {
        try {
            BufferedImage myPicture = ImageIO.read(new File(ruta));
            //System.out.println("Ruta: "+ ruta);
            this.lbl_imagen.setText("<html><img height='200' width='125' src='file:"+ruta+"' /></html>");
            this.lbl_imagen.repaint();
        } catch (IOException ex) {
            Logger.getLogger(GUIServidor.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    @Override
    public void mostrar() {
        this.setVisible(true);
    }

    @Override
    public JLabel obtenerEtiquetaDeReloj() {
        return this.lbl_reloj;
    }

    @Override
    public void limpiarPortada() {
        this.lbl_imagen.setText("");
        this.lbl_imagen.repaint();
    }
}
